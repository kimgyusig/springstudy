<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.kh.wehub.member.model.dao.MemberDao">

	<sql id="selectMemberSql">
		 SELECT
		 		USER_NO,
		 		NEW_USER_NO,
		 		USER_COMPANYNAME,
		        USER_ID,
		        USER_PWD,
		        USER_NAME,
		        RANK,
	         	EMAIL,
	         	COMCALL,
	         	PHONE,
	         	ADDRESS,
		        USER_STATUS,
		        M.DEPT_CODE,
		        D.DEPT_NAME,
		        USER_IMG_ORIFILENAME,
		        USER_IMG_REFILENAME
			FROM MEMBER M
			JOIN DEPARTMENT D ON D.DEPT_CODE = M.DEPT_CODE
			WHERE USER_STATUS ='Y'
	</sql>
	
	<sql id="selectMemberSqlForFreeBoardAndApproval">
		 SELECT USER_NO,
		 		USER_COMPANYNAME,
		        USER_ID,
		        USER_PWD,
		        USER_NAME,
		        RANK,
	         	EMAIL,
	         	COMCALL,
	         	PHONE,
	         	ADDRESS,
		        USER_STATUS,
		        M.DEPT_CODE,
		        D.DEPT_NAME,
		        USER_IMG_REFILENAME
			FROM MEMBER M
			JOIN DEPARTMENT D ON D.DEPT_CODE = M.DEPT_CODE
			WHERE USER_STATUS ='Y'
	</sql>
	
	<resultMap type="Member" id="memberResultMap">
		<!-- property : 자바의 인스턴스 변수 이름, column : DB에서 select 된 결과 컬럼명 -->
		<!-- DB에서 기본키를 의미 -->
		<id property="user_no" column="USER_NO"/>
		<!-- DB에서 일반 컬럼들 -->
		<result property="newUserNo" column="NEW_USER_NO"/>
		<result property="user_companyname" column="USER_COMPANYNAME"/>
		<result property="user_id" column="USER_ID"/>
		<result property="user_pwd" column="USER_PWD"/>
		<result property="user_name" column="USER_NAME"/>
		<result property="rank" column="RANK"/>
		<result property="email" column="EMAIL"/>
		<result property="comcall" column="COMCALL"/>
		<result property="phone" column="PHONE"/>
		<result property="address" column="ADDRESS"/>
		<result property="user_status" column="USER_STATUS"/>
		<result property="dept_code" column="DEPT_CODE"/>
		<result property="user_imgOriname" column="USER_IMG_ORIFILENAME"/>
		<result property="user_imgRename" column="USER_IMG_REFILENAME"/>
		<result property="newUserNo" column="NEW_USER_NO"/>
	</resultMap>
	
	<resultMap type="InsertNewMember" id="newMemberResultMap">
		<id property="new_no" column="NEW_NO"/>
		<result property="new_name" column="NEW_NAME"/>
		<result property="new_rank" column="NEW_RANK"/>
		<result property="new_dept" column="NEW_DEPT"/>
	</resultMap>
	
	<insert id="insertMember" parameterType="Member"
		useGeneratedKeys="true" keyProperty="user_no" keyColumn="USER_NO">	
		INSERT INTO MEMBER (
			USER_NO,
			USER_COMPANYNAME,
			USER_ID,
			USER_PWD,
			USER_NAME,
			RANK,
			EMAIL,
			COMCALL,
			PHONE,
			ADDRESS,
			USER_STATUS,
			DEPT_CODE,
			USER_IMG_ORIFILENAME,
			USER_IMG_REFILENAME,
			NEW_USER_NO

		)
		VALUES(
			SEQ_USER_NO.NEXTVAL, 
			#{user_companyname}, 
			#{user_id}, 
			#{user_pwd}, 
			#{user_name},
			#{rank}, 
			#{email}, 
			#{comcall},
			#{phone},
			#{address}, 
			DEFAULT, 
			#{dept_code},
			#{user_imgOriname},
			#{user_imgRename},
			#{newUserNo}

		)
	</insert>
	<!-- 회원 인증키(난수) 생성 -->
	<insert id="GetKey" parameterType="Map">
		update member set user_key = #{param2} where user_id = #{param1}

	</insert>
<!-- [출처] 스프링(Spring) MVC 패턴을 이용한 회원가입 (mybatis 연동)|작성자 순남2 -->

	<select id="selectMember" parameterType="string" resultMap="memberResultMap">
		<include refid="selectMemberSql"></include>
	 	AND USER_ID = #{user_id}
	</select>
	
	<select id="findID" parameterType="Member" resultType="String" >
		SELECT  USER_ID 	FROM MEMBER 
		WHERE USER_STATUS ='Y' AND  
				USER_NAME= #{user_name} AND
	         	EMAIL= #{email} AND
	         	PHONE =#{phone}
	</select>
	
	<select id="findPWD" parameterType="Member" resultType="String" >
		SELECT  USER_PWD 	FROM MEMBER 
		WHERE USER_STATUS ='Y' AND  
				USER_NAME= #{user_name} AND
				USER_ID= #{user_id} AND
	         	EMAIL= #{email} AND
	         	 USER_PWD =#{user_pwd}
	</select>
	
	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER 
		SET
		    EMAIL=#{email},
		    COMCALL=#{comcall},
		    PHONE=#{phone},
		    <if test="user_imgOriname != null">
		    USER_IMG_ORIFILENAME=#{user_imgOriname},
		    </if>
		    <if test="user_imgRename != null">
		    USER_IMG_REFILENAME=#{user_imgRename},
		    </if>
		    ADDRESS=#{address}
		WHERE 
		    USER_NO=#{user_no}	
	</update>
	
	<update id="updateMemberPass" parameterType="Member">
		UPDATE MEMBER 
		SET
		    USER_PWD=#{user_pwd}
		WHERE 
		    USER_ID=#{user_id}	
	</update>
	

	<update id="searchPassword" parameterType="Map" >
	 	UPDATE MEMBER 
	 	SET
		    USER_PWD=#{key}
		WHERE 
		    USER_ID=#{user_id}
		AND
			EMAIL=#{email}

	</update>

	<select id="updateFindPWD" parameterType="Member" resultType="String" >
		SELECT USER_PWD FROM MEMBER
		WHERE
			USER_ID= #{user_id}
	</select>
		
<!-- 	<update id="updateUserImg" parameterType="Member">
		UPDATE MEMBER 
		SET
		    USER_IMG_ORIFILENAME=#{user_imgOriname},
		    USER_IMG_REFILENAME=#{user_imgRename}
		WHERE
		    USER_NO=#{user_no}
	</update> -->
	
	<delete id="deleteMember" parameterType="string">
		UPDATE MEMBER 
		SET
		    USER_STATUS='N'
		WHERE 
		    USER_ID=#{user_id}		
	</delete>
	
	<!-- 비밀번호 변경 -->
	<update id="updatePw" >
		update member set PASSWORD = #{user_pwd} where id = #{user_id}
	</update>
		
	<!-- 임시회원 찾아오는 쿼리 -->
	<select id="getNewMember" parameterType="string" resultMap="newMemberResultMap">
		SELECT N.NEW_NO, N.NEW_NAME, N.NEW_RANK, N.NEW_DEPT
		FROM NEWMEMBER N
		WHERE NEW_NO = #{userNo}
	</select>
	
	<select id="checkNewMem" parameterType="string" resultMap="memberResultMap">
		SELECT M.USER_NO,
		        M.USER_NAME,
		        M.NEW_USER_NO
		FROM MEMBER M
		WHERE USER_STATUS ='Y' AND NEW_USER_NO = #{userNo}
	</select>
	
	<!-- Free Board -->
	<select id="selectMemberForFreeBoard" parameterType="string" resultMap="memberResultMap">
		<include refid="selectMemberSqlForFreeBoardAndApproval"></include>
	 	AND USER_ID = #{userId}
	</select>
	
	<select id="selectMemberAllForApproval" parameterType="string" resultMap="memberResultMap">
		<include refid="selectMemberSqlForFreeBoardAndApproval"></include>
		AND USER_ID != #{userId}
	</select>
	
	<select id="selectSearchedMemberForApproval" parameterType="map" resultMap="memberResultMap">
		SELECT M.USER_NO,
		        M.USER_NAME,
		        M.RANK,
		        D.DEPT_NAME
		FROM MEMBER M
        JOIN DEPARTMENT D ON (M.DEPT_CODE = D.DEPT_CODE)
        WHERE M.USER_STATUS='Y' AND (M.USER_NAME LIKE '%'||#{searchData}||'%' OR
        							 M.RANK LIKE '%'||#{searchData}||'%' OR 
        							 D.DEPT_NAME LIKE '%'||#{searchData}||'%')		
		AND USER_ID != #{userId}		 
	</select>
	
	<select id="getSearchMemberForApproval" parameterType="string" resultMap="memberResultMap">
		SELECT M.USER_NAME, M.DEPT_CODE, M.RANK
		FROM MEMBER M
		WHERE USER_NAME LIKE '%'|| #{userName} ||'%'
	</select>
	
	<!-- Approval 자동완성 -->
	<select id="getSearchMemberApp" parameterType="string" resultMap="memberResultMap">
		SELECT M.USER_NAME, D.DEPT_NAME, M.RANK
		FROM MEMBER M
		LEFT OUTER JOIN DEPARTMENT D ON (M.DEPT_CODE = D.DEPT_CODE)
		WHERE USER_NAME LIKE '%'|| #{user_name} ||'%' AND USER_STATUS ='Y'
	</select>
	
	<select id="findUserInfo" parameterType="string" resultMap="memberResultMap">
		 SELECT
		 		USER_NO,
		 		NEW_USER_NO,
		 		USER_COMPANYNAME,
		        USER_ID,
		        USER_PWD,
		        USER_NAME,
		        RANK,
	         	EMAIL,
	         	COMCALL,
	         	PHONE,
	         	ADDRESS,
		        USER_STATUS,
		        M.DEPT_CODE,
		        D.DEPT_NAME,
		        USER_IMG_ORIFILENAME,
		        USER_IMG_REFILENAME
			FROM MEMBER M
			JOIN DEPARTMENT D ON D.DEPT_CODE = M.DEPT_CODE
			JOIN NEWMEMBER NM ON NM.NEW_NO = M.NEW_USER_NO
			WHERE USER_STATUS ='Y' AND USER_ID = #{user_id}
	</select>
</mapper>
